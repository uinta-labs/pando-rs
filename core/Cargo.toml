[package]
name = "pando-core"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[dependencies]
tokio = { workspace = true }
anyhow = { workspace = true }
env_logger = { workspace = true }
tonic = { workspace = true }
rustix = { workspace = true }
prost = "0.13.5"
bollard = "0.18.1"
futures = "0.3.31"
serde_json = { workspace = true }
serde = { version = "1.0.219", features = ["derive"] }
winnow = "0.7.4"
rumqttc = { version = "0.24.0", features = ["websocket"] }
async-nats = { version = "0.40.0", features = ["websockets"] }
bytes = { version = "1.10.1", features = ["serde"] }
serde_yaml = "0.9.34"
uuid = { version = "1.16.0", features = ["v4", "v7"] }
clap = { version = "4.4.18", features = ["derive"] }
log = "0.4.26"
tracing = { version = "0.1.41", features = ["log"] }
assert_fs = "1.1.0"
async-stream = "0.3.6"
chrono = { version = "0.4.40", features = ["serde"] }
tokio-stream = { version = "0.1.17", features = ["full"] }


[build-dependencies]
tonic-build = { version = "0.13.0", features = ["prost"] }
prost-build = "0.13.5"

# If installing a compaible protobuf compiler becomes too onerous, this nifty package will build it for us at the
# non-zero cost of...compiling protoc. May be useful if we want to build this within Yocto, though on last attempt
# on a Fedora-based build host, the protoc compiler produced could not execute. However, the Yocto-provided protoc
# would not execute either, so I suspect an incompatiblity with my test.
# protobuf-src = "2.1.1"